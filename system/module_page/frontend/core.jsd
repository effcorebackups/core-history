
  'use strict';

  var effcore = new effCore();

  function effCore() {
    this.tokens = [];
    this.tokens['color_text'] = '%%_color_text';
    this.tokens['color_main'] = '%%_color_main';
    this.uagent = document.documentElement.getAttribute('data-uagent') ? document.documentElement.getAttribute('data-uagent') : '';
    this.uacore = document.documentElement.getAttribute('data-uacore') ? document.documentElement.getAttribute('data-uacore') : '';
  }

  effCore.prototype.collection = function(data = {}) {
    this.data = data;
    this.length = function()                 {return Object.keys(this.data).length;}
    this.select = function(id)               {return this.data[id];}
    this.insert = function(value, id = null) {this.data[id ? id : this.length()] = value;}
    this.update = function(value, id)        {if (this.data[id]) this.data[id] = value;}
    this.delete = function(id)               {delete(this.data[id]);}
    this.for_each = function(user_func) {
      if (this.length()) {
        for (var id in this.data) {
          user_func.call(this, this.data[id], id);
        }
      }
    }
  }

  effCore.prototype.get_elements = function (query, root = document) {
    var result = new this.collection();
    var buffer = root.querySelectorAll(query);
    if (buffer instanceof NodeList) {
      for (var i = 0; i < buffer.length; i++) {
        result.insert(buffer[i]);
      }
    }
    return result;
  }
