
  var effcore = new effCore();

  function effCore() {
    this.tokens = [];
    this.tokens['text_no_items'       ] = '%%_text_no_items';
    this.tokens['text_select_all_rows'] = '%%_text_select_all_rows';
    this.uagent = document.documentElement.getAttribute('data-uagent') ? document.documentElement.getAttribute('data-uagent') : '';
    this.uacore = document.documentElement.getAttribute('data-uacore') ? document.documentElement.getAttribute('data-uacore') : '';
  }

  /* polyfills and extensions */

  if (!Element.prototype.prepend) {
       Element.prototype.prepend = function(newElement){
      if (newElement instanceof Node)
           this.insertBefore(                               newElement,   this.firstChild);
      else this.insertBefore(document.createTextNode(String(newElement)), this.firstChild);
    }
  }

  if (!Element.prototype.append) {
       Element.prototype.append = function(newElement){
      if (newElement instanceof Node)
           this.appendChild(                               newElement  );
      else this.appendChild(document.createTextNode(String(newElement)));
    }
  }

  if (!NodeList.prototype.forEach) {
       NodeList.prototype.forEach = Array.prototype.forEach;
  }

  NodeList.prototype.forFirstItem =
     Array.prototype.forFirstItem = function(handler){
    if (this[0]) handler(this[0]);
  }

  Document.prototype._select =
      Node.prototype._select = function(query){
    var result = this.querySelector(query);
    if (result instanceof Node)
         return [result];
    else return [      ];
  }

  Document.prototype._select_all =
      Node.prototype._select_all = function(query){
    var result = this.querySelectorAll(query);
    return result instanceof NodeList ?
           result : [];
  }
